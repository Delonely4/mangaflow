
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  username: 'username',
  avatar: 'avatar',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BooksScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  cover_image: 'cover_image',
  status: 'status',
  current_chapter: 'current_chapter',
  total_chapters: 'total_chapters',
  total_chapters_rus: 'total_chapters_rus',
  total_chapters_eng: 'total_chapters_eng',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.AuthorsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  name_eng: 'name_eng',
  bio: 'bio',
  created_at: 'created_at'
};

exports.Prisma.GenresScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at'
};

exports.Prisma.TagsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at'
};

exports.Prisma.CharactersScalarFieldEnum = {
  id: 'id',
  book_id: 'book_id',
  name: 'name',
  created_at: 'created_at'
};

exports.Prisma.ChaptersScalarFieldEnum = {
  id: 'id',
  book_id: 'book_id',
  number: 'number',
  title: 'title',
  release_date: 'release_date',
  created_at: 'created_at'
};

exports.Prisma.User_booksScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  book_id: 'book_id',
  status: 'status',
  current_chapter: 'current_chapter',
  personal_rating: 'personal_rating',
  started_at: 'started_at',
  finished_at: 'finished_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Readed_chaptersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  book_id: 'book_id',
  chapter_number: 'chapter_number',
  language: 'language',
  created_at: 'created_at'
};

exports.Prisma.Favorites_booksScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  book_id: 'book_id',
  created_at: 'created_at'
};

exports.Prisma.Favorite_charactersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  book_id: 'book_id',
  character_id: 'character_id',
  created_at: 'created_at'
};

exports.Prisma.Book_authorsScalarFieldEnum = {
  book_id: 'book_id',
  author_id: 'author_id',
  role: 'role'
};

exports.Prisma.Book_genresScalarFieldEnum = {
  book_id: 'book_id',
  genre_id: 'genre_id'
};

exports.Prisma.Book_tagsScalarFieldEnum = {
  book_id: 'book_id',
  tag_id: 'tag_id'
};

exports.Prisma.Character_genresScalarFieldEnum = {
  character_id: 'character_id',
  genre_id: 'genre_id'
};

exports.Prisma.ReviewsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  book_id: 'book_id',
  content: 'content',
  rating: 'rating',
  is_spoiler: 'is_spoiler',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.QuotesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  book_id: 'book_id',
  chapter_id: 'chapter_id',
  content: 'content',
  chapter_number: 'chapter_number',
  created_at: 'created_at'
};

exports.Prisma.Reading_listScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  description: 'description',
  is_public: 'is_public',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Reading_list_itemsScalarFieldEnum = {
  id: 'id',
  list_id: 'list_id',
  book_id: 'book_id',
  priority: 'priority',
  note: 'note',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.BookStatus = exports.$Enums.BookStatus = {
  ONGOING: 'ONGOING',
  COMPLETED: 'COMPLETED',
  HIATUS: 'HIATUS',
  CANCELLED: 'CANCELLED',
  ANNOUNCED: 'ANNOUNCED'
};

exports.ReadingStatus = exports.$Enums.ReadingStatus = {
  PLAN_TO_READ: 'PLAN_TO_READ',
  READING: 'READING',
  COMPLETED: 'COMPLETED',
  ON_HOLD: 'ON_HOLD',
  DROPPED: 'DROPPED',
  REREADING: 'REREADING'
};

exports.AuthorRole = exports.$Enums.AuthorRole = {
  AUTHOR: 'AUTHOR',
  ARTIST: 'ARTIST',
  BOTH: 'BOTH'
};

exports.Prisma.ModelName = {
  Users: 'Users',
  Books: 'Books',
  Authors: 'Authors',
  Genres: 'Genres',
  Tags: 'Tags',
  Characters: 'Characters',
  Chapters: 'Chapters',
  User_books: 'User_books',
  Readed_chapters: 'Readed_chapters',
  Favorites_books: 'Favorites_books',
  Favorite_characters: 'Favorite_characters',
  Book_authors: 'Book_authors',
  Book_genres: 'Book_genres',
  Book_tags: 'Book_tags',
  Character_genres: 'Character_genres',
  Reviews: 'Reviews',
  Quotes: 'Quotes',
  Reading_list: 'Reading_list',
  Reading_list_items: 'Reading_list_items'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
